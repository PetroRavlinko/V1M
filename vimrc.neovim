 " Note: Skip initialization for vim-tiny or vim-small.
 if 0 | endif

 if has('vim_starting')
   if &compatible
     set nocompatible               " Be iMproved
   endif

   " Required:
   set runtimepath+=~/.vim/bundle/neobundle.vim/
 endif

 " Required:
 call neobundle#begin(expand('~/.vim/bundle/'))

 " Let NeoBundle manage NeoBundle
 " Required:
 NeoBundleFetch 'Shougo/neobundle.vim'

 " My Bundles here:
 " Refer to |:NeoBundle-examples|.
 " Note: You don't set neobundle setting in .gvimrc!

 " My Bundle here
 NeoBundle "MarcWeber/vim-addon-mw-utils"
 NeoBundle "tomtom/tlib_vim"
 NeoBundle "garbas/vim-snipmate"
 " Visual effects 
 NeoBundle "vim-airline/vim-airline"
 NeoBundle "vim-airline/vim-airline-themes"
 NeoBundle "syntastic"
 NeoBundle "Tagbar"
 NeoBundle "fatih/vim-go"
 if has('lua')
   NeoBundle "Shougo/neocomplete"
   NeoBundle "Shougo/neosnippet"
   NeoBundle "Shougo/neosnippet-snippets"
 end
 NeoBundle "kien/ctrlp.vim"
 NeoBundle "t9md/vim-chef"
 NeoBundle "tpope/vim-fugitive"
 NeoBundle "gregsexton/gitv"
 NeoBundle "elzr/vim-json"
 NeoBundle "knt45/jq-wrapper.vim"

  call neobundle#end()
 
  " Required:
  filetype plugin indent on
 
 " BUNDLE CONFIGURATION
 
 " Add powerline: vim-airline
 set laststatus=2
 let g:airline_theme='badwolf'
 let g:airline_detect_modified=1
  if !exists('g:airline_symbols')
    let g:airline_symbols = {}
  endif
  let g:airline_symbols.space = "\ua0"
  let g:airline_left_sep = '▶'
  let g:airline_left_alt_sep = '▶'
  let g:airline_right_sep = '◀'
  let g:airline_right_alt_sep = '◀'
  let g:airline#extensions#tabline#enabled = 1
  let g:airline#extensions#tabline#left_sep = ' '
  let g:airline#extensions#tabline#left_alt_sep = '|'
 
 " Toggle tagbar 
 nmap <F8> :TagbarToggle<CR>

 " If there are uninstalled bundles found on startup,
 " this will conveniently prompt you to install them.
 NeoBundleCheck
